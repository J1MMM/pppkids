import {useEffect, useRef, useState} from "react";
import Animated, { measure, useAnimatedGestureHandler, useAnimatedProps, useAnimatedStyle, useSharedValue, withSpring } from "react-native-reanimated";
import Svg, { ClipPath, Defs, G, Mask, Path, Rect } from "react-native-svg";
import AnimatedArrow from "../../AnimatedArrow";
import BalloonStroke from "../../Strokes/BalloonStroke";
import { PanResponder, StyleSheet, View } from "react-native";
import uppercaseStyles from "../../../app/alphabetuppercase/uppercaseStyles";
import AnimatedView from "../../AnimatedView";
import { GestureHandlerRootView, PanGestureHandler } from "react-native-gesture-handler";


const UppercaseB = ({round, strokeDone, strokes}) => {
  const AnimatedPath = Animated.createAnimatedComponent(Path)
  const AnimatedSvg = Animated.createAnimatedComponent(Svg)
  const AnimatedMask = Animated.createAnimatedComponent(Mask)
  const x = useSharedValue(60);
  const y = useSharedValue(45);
  const path = useSharedValue(`M${x.value} ${y.value}`)
  

  const onPan = useAnimatedGestureHandler({
    onStart: ({translationX, translationY, absoluteX, absoluteY}, ctx) => {
      console.log('tap');
    },
    onActive: ({translationX, translationY}) => {
      path.value += `L${translationX + x.value} ${translationY + y.value}`
    },
    onEnd: () => {
      path.value = `M${x.value} ${y.value}`
    }
  })

  const pathAnimatedProps = useAnimatedProps(()=>{
    return {
      d: path.value
    }
  })

  const clippingPath = "M50,0 L150,0 L150,150 L50,150 Z";


  return(
    <View style={localStyles.container}>
      <Svg
        width={239}
        height={319}
        viewBox="0 0 239 319"
        fill="none"
        >
        <Path
          d="M94.1281 261.8L93.4773 264.729L93.5219 264.738L93.5668 264.747L94.1281 261.8ZM156.128 253L157.985 255.356L158.006 255.339L158.028 255.322L156.128 253ZM93.7281 68.2L93.1398 65.2582L93.0698 65.2722L93.0005 65.2896L93.7281 68.2ZM46.1281 311.8L46.4092 308.813L46.3933 308.812L46.3773 308.81L46.1281 311.8ZM30.1281 303.4L32.4229 301.468L30.1281 303.4ZM30.1281 26.6L27.8924 24.5996L27.8859 24.6069L30.1281 26.6ZM46.5281 18.2L46.7773 21.1896L46.8058 21.1872L46.8342 21.1843L46.5281 18.2ZM207.328 132.6L205.133 130.555L205.121 130.568L205.108 130.582L207.328 132.6ZM164.128 155V158H164.391L164.649 157.954L164.128 155ZM164.528 156.2L164.942 153.229L164.736 153.2H164.528V156.2ZM214.528 180.2L212.341 182.253L212.352 182.265L212.363 182.277L214.528 180.2ZM203.728 293.4L205.512 295.812L205.518 295.808L203.728 293.4ZM87.5281 187V257.4H93.5281V187H87.5281ZM87.5281 257.4C87.5281 259.104 87.9616 260.801 89.1063 262.2C90.2444 263.591 91.8176 264.36 93.4773 264.729L94.7789 258.871C94.0387 258.707 93.8119 258.476 93.75 258.4C93.6947 258.333 93.5281 258.096 93.5281 257.4H87.5281ZM93.5668 264.747C99.4091 265.86 106.409 266.4 114.528 266.4V260.4C106.648 260.4 100.047 259.874 94.6895 258.853L93.5668 264.747ZM114.528 266.4C133.712 266.4 148.399 262.909 157.985 255.356L154.272 250.644C146.257 256.958 133.211 260.4 114.528 260.4V266.4ZM158.028 255.322C167.716 247.395 172.328 235.485 172.328 220.2H166.328C166.328 234.249 162.14 244.205 154.228 250.678L158.028 255.322ZM172.328 220.2C172.328 206.948 166.834 196.751 155.897 190.043C145.199 183.481 129.537 180.4 109.328 180.4V186.4C129.119 186.4 143.458 189.452 152.76 195.157C161.822 200.716 166.328 208.919 166.328 220.2H172.328ZM109.328 180.4H93.7281V186.4H109.328V180.4ZM93.7281 180.4C92.1015 180.4 90.3598 180.874 89.0859 182.307C87.8718 183.673 87.5281 185.419 87.5281 187H93.5281C93.5281 186.613 93.5723 186.386 93.6045 186.277C93.6338 186.178 93.6417 186.213 93.5704 186.293C93.4922 186.381 93.408 186.424 93.3815 186.434C93.3726 186.437 93.4686 186.4 93.7281 186.4V180.4ZM87.5281 72.6V131.4H93.5281V72.6H87.5281ZM87.5281 131.4C87.5281 132.929 87.9124 134.627 89.2068 135.921C90.5012 137.216 92.199 137.6 93.7281 137.6V131.6C93.4358 131.6 93.3022 131.562 93.2768 131.554C93.2671 131.551 93.2855 131.556 93.3216 131.578C93.3588 131.6 93.4041 131.633 93.4495 131.679C93.4948 131.724 93.5283 131.769 93.5506 131.807C93.5723 131.843 93.5774 131.861 93.5742 131.851C93.5657 131.826 93.5281 131.692 93.5281 131.4H87.5281ZM93.7281 137.6H103.728V131.6H93.7281V137.6ZM103.728 137.6C123.395 137.6 138.642 134.688 149.064 128.477C159.731 122.12 165.128 112.426 165.128 99.8H159.128C159.128 110.374 154.791 118.08 145.992 123.323C136.948 128.712 122.995 131.6 103.728 131.6V137.6ZM165.128 99.8C165.128 87.8852 160.683 78.5884 151.616 72.4196C142.755 66.3916 129.841 63.6 113.328 63.6V69.6C129.348 69.6 140.834 72.3418 148.241 77.3804C155.44 82.2783 159.128 89.5815 159.128 99.8H165.128ZM113.328 63.6C105.473 63.6 98.7289 64.1404 93.1398 65.2582L94.3165 71.1417C99.394 70.1262 105.717 69.6 113.328 69.6V63.6ZM93.0005 65.2896C91.4016 65.6893 89.9325 66.5184 88.9019 67.9355C87.8916 69.3247 87.5281 70.9694 87.5281 72.6H93.5281C93.5281 71.8306 93.698 71.542 93.7543 71.4645C93.7904 71.4149 93.9213 71.244 94.4557 71.1104L93.0005 65.2896ZM46.3773 308.81C40.8001 308.346 36.1935 305.945 32.4229 301.468L27.8334 305.332C32.5961 310.988 38.6561 314.188 45.879 314.79L46.3773 308.81ZM32.4229 301.468C28.5943 296.921 26.7281 291.866 26.7281 286.2H20.7281C20.7281 293.334 23.1286 299.745 27.8334 305.332L32.4229 301.468ZM26.7281 286.2V43.8H20.7281V286.2H26.7281ZM26.7281 43.8C26.7281 37.8374 28.6118 32.8214 32.3704 28.5931L27.8859 24.6069C23.1111 29.9786 20.7281 36.4293 20.7281 43.8H26.7281ZM32.3639 28.6004C36.4188 24.0684 41.1895 21.6553 46.7773 21.1896L46.279 15.2103C39.0667 15.8114 32.9041 18.9983 27.8924 24.5996L32.3639 28.6004ZM46.8342 21.1843C67.5371 19.061 87.8349 18 107.728 18V12C87.6214 12 67.1192 13.0724 46.222 15.2156L46.8342 21.1843ZM107.728 18C146.169 18 174.482 24.2143 193.102 36.2213C211.497 48.0825 220.728 65.7841 220.728 89.8H226.728C226.728 63.9493 216.626 44.2508 196.354 31.1787C176.308 18.2524 146.621 12 107.728 12V18ZM220.728 89.8C220.728 105.881 215.523 119.405 205.133 130.555L209.523 134.645C221 122.328 226.728 107.319 226.728 89.8H220.728ZM205.108 130.582C194.958 141.747 181.196 148.942 163.607 152.046L164.649 157.954C183.327 154.658 198.365 146.92 209.548 134.618L205.108 130.582ZM164.128 152C163.536 152 162.885 152.157 162.289 152.554C161.712 152.939 161.356 153.436 161.145 153.858C160.765 154.619 160.728 155.38 160.728 155.8H166.728C166.728 155.687 166.758 156.048 166.511 156.542C166.367 156.831 166.094 157.228 165.617 157.546C165.121 157.877 164.586 158 164.128 158V152ZM160.728 155.8C160.728 156.392 160.885 157.043 161.282 157.639C161.667 158.216 162.164 158.572 162.587 158.783C163.347 159.163 164.108 159.2 164.528 159.2V153.2C164.415 153.2 164.776 153.17 165.27 153.417C165.559 153.561 165.956 153.834 166.274 154.311C166.605 154.807 166.728 155.342 166.728 155.8H160.728ZM164.114 159.171C184.634 162.029 200.627 169.775 212.341 182.253L216.715 178.147C203.896 164.491 186.555 156.238 164.942 153.229L164.114 159.171ZM212.363 182.277C224.36 194.784 230.328 209.639 230.328 227H236.328C236.328 208.094 229.763 191.75 216.693 178.123L212.363 182.277ZM230.328 227C230.328 255.869 220.751 277.01 201.939 290.992L205.518 295.808C226.172 280.457 236.328 257.331 236.328 227H230.328ZM201.944 290.988C183.251 304.816 153.371 312 111.728 312V318C153.818 318 185.272 310.784 205.512 295.812L201.944 290.988ZM111.728 312C90.7625 312 68.9899 310.938 46.4092 308.813L45.847 314.787C68.5997 316.928 90.5604 318 111.728 318V312Z"
          fill="#05264A"
        />
        <AnimatedPath 
          animatedProps={pathAnimatedProps} 
          strokeWidth={40} 
          stroke="#00B1FF" 
          fill="none" />
      </Svg>

      <View style={localStyles.stroke1Container}>
        <PanGestureHandler onGestureEvent={onPan}>
          <Animated.View style={[uppercaseStyles.point, localStyles.stroke1PointA]}  />
        </PanGestureHandler>
          <Animated.View style={[uppercaseStyles.point, localStyles.stroke1PointB]} />
      </View>
      
    </View>
  );
}

const localStyles = StyleSheet.create({
  container: {
    // borderWidth: 1,
  },
  canvas: {
    position: 'absolute',
    width: '100%',
    height: '100%',
  },
  stroke1Container: {
    // borderWidth: 1,
    position: 'absolute',
    // backgroundColor: '#3434d939',
    width: '100%',
    height: '100%',
  },
  stroke1PointA: {
    position: 'absolute',
    left: 40,
    top: 30
  },
  stroke1PointB: {
    position: 'absolute',
    left: 40,
    top: 150
  }

})


export default UppercaseB;
